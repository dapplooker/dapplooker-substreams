#change it to TranactionDetails
# fields should be in camelCase
type Block @entity {
  id: String!
  parentHash: String!
  uncleHash: String!
  nonce: BigInt!
  receipt_root: BigInt!
  number: BigInt!
  gasLimit: BigInt!
  gasUsed: BigInt!
  timestamp: BigInt!
  size: BigInt!
  difficulty: String!
  totalDifficulty: String!
}

type Transaction @entity {
  id: String!
  status: String!
  gasUsed: BigInt!
  gasLimit: BigInt!
  nonce: BigInt!
  to: String!
  from: String!
  maxFeePerGas: String!
  maxPriorityFeePerGas: String!
  index: BigInt!
  value: String!
  blockNumber: BigInt!
}

# type Block @entity {
#   hash: Bytes!
#   miner: Bytes!
#   nonce: Bytes!
#   parent_hash: Bytes!
#   size: BigInt!
#   time: DateTime!
#   total_difficulty
#   number: BigInt!
#   base_fee_per_gas: BigInt!
#   difficulty: BigInt!
#   gas_limit: Decimal!
#   gas_used: Decimal!
# }

# type EthTransfer @entity {
#   BLOCK_NUMBER: Int!
#   BLOCK_TIMESTAMP: DateTime! # Replace with appropriate scalar type for timestamp_ntz
#   ETH_FROM_ADDRESS: String!
#   ETH_TO_ADDRESS: String!
#   IDENTIFIER: String!
#   ORIGIN_FROM_ADDRESS: String!
#   ORIGIN_FUNCTION_SIGNATURE: String!
#   ORIGIN_TO_ADDRESS: String!
#   TX_HASH: String!
# }

# type TokenTransfer @entity {
#   _LOG_ID: String!
#   BLOCK_NUMBER: Int!
#   BLOCK_TIMESTAMP: DateTime! # Replace with appropriate scalar type for timestamp_ntz
#   CONTRACT_ADDRESS: String!
#   FROM_ADDRESS: String!
#   ORIGIN_FROM_ADDRESS: String!
#   ORIGIN_FUNCTION_SIGNATURE: String!
#   ORIGIN_TO_ADDRESS: String!
#   RAW_AMOUNT: Float!
#   TO_ADDRESS: String!
#   TX_HASH: String!
# }

# type Trace @entity {
#   BLOCK_NUMBER: Int!
#   BLOCK_TIMESTAMP: DateTime! # Replace with appropriate scalar type for timestamp_ntz
#   DATA: JSON! # Replace with appropriate scalar type for object
#   ERROR_REASON: String!
#   ETH_VALUE: Float!
#   FROM_ADDRESS: String!
#   GAS: Float!
#   GAS_USED: Float!
#   IDENTIFIER: String!
#   INPUT: String!
#   OUTPUT: String!
#   SUB_TRACES: Int!
#   TO_ADDRESS: String!
#   TRACE_INDEX: Int!
#   TRACE_STATUS: String!
#   TX_HASH: String!
#   TX_STATUS: String!
#   TYPE: String!
# }

# type Block @entity {
#   BLOCK_HEADER_JSON: JSON! # Replace with appropriate scalar type for object
#   BLOCK_NUMBER: Int!
#   BLOCK_TIMESTAMP: DateTime! # Replace with appropriate scalar type for timestamp_ntz
#   BLOCKCHAIN: String!
#   DIFFICULTY: Int!
#   EXTRA_DATA: String!
#   GAS_LIMIT: Int!
#   GAS_USED: Int!
#   HASH: String!
#   MINER: String!
#   NETWORK: String!
#   NONCE: Int!
#   PARENT_HASH: String!
#   RECEIPTS_ROOT: String!
#   SHA3_UNCLES: String!
#   SIZE: Int!
#   TOTAL_DIFFICULTY: Int!
#   TX_COUNT: Int!
#   UNCLE_BLOCKS: JSON! # Replace with appropriate scalar type for variant
# }

# ++++++++++++final schema++++++++++

# type Transaction @entity {
#   id: Bytes!
#   status: String!
#   gasUsed: BigInt!
#   index: BigInt!
#   nonce: BigInt!
#   gasLimit: BigInt!
#   to: Bytes!
#   from: Bytes!
#   publicKey: Bytes!
#   value: BigInt!
#   maxFeePerGas: BigInt!
#   maxPriorityFeePerGas: BigInt!
#   blockNumber: BigInt!
#   timestamp: DateTime!
# }

# type Block @entity {
#   id: Bytes!
#   nonce: Bytes!
#   parentHash: Bytes!
#   uncleHash: Bytes!
#   size: BigInt!
#   totalDifficulty: BigInt!
#   number: BigInt!
#   difficulty: BigInt!
#   gasLimit: Decimal!
#   gasUsed: Decimal!
#   timestamp: DateTime!
# }

# type Contract @entity {
#   address: String!
#   #contract_metadata:
#   decimals: Int!
#   name: String!
#   symbol: String!
# }
